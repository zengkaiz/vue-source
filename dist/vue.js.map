{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/generate.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isObject(obj) {\n    if(typeof obj === 'object' && typeof obj !== null){\n        return true\n    }\n}\n\n\nexport function def(data, key, value) {\n    Object.defineProperty(data, key, {\n      enumerable: false, // 不可枚举\n      configurable: false,\n      value\n    });\n}","// data.__proto__ = arrayMethods    arrayMethods.__proto__ = oldArrayMethods 原型链查找\n\nlet oldArrayMethods = Array.prototype  // 获取原型上的方法\nexport let arrayMethods = Object.create(oldArrayMethods)    // 创建一个新的对象 可以找到原型上的方法，而且不会影响原数组的方法\n\nconst methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'sort',\n    'reverse',\n    'splice'\n]\n\nmethods.forEach(method => {\n    arrayMethods[method] = function(...args){      // 函数劫持 AOP\n        // 当调用数组方法时 会先执行我自己改造的逻辑，然后执行数组默认的逻辑\n        const ob = this.__ob__\n        const result = oldArrayMethods[method].apply(this, args);\n        let inserted\n        // push unshift splice 都可以新增属性，新增的属性也要监听\n\n        switch(method){\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break\n            case 'splice':\n                inserted = args.slice(2)\n                break\n            default:\n                break\n        }\n        inserted && ob.observerArray(inserted)\n        return result\n    }\n})","import {isObject, def} from '../utils'\nimport {arrayMethods} from './array'\n\nclass Observer {\n    constructor(data) {\n      // 给每一个监控过的对象新增一个__ob__属性\n      // value.__ob__ = this 这种写法有风险\n      def(data,\"__ob__\",this)\n\n      // 1.对象就是使用defineProperty实现数据响应式原理, 如果这个数据不是对象或者是null 那就不用监控了。 这个方法不能兼容ie8及以下，所以vue无法兼容\n      // 2. 数组索引进行拦截的话 性能差而且直接更新索引的方式并不多， 所以vue对数组是通过重写数组方法 函数劫持来监控数组本身的方法\n      if (Array.isArray(data)) {\n        data.__proto__ = arrayMethods;\n        this.observerArray(data);\n      } else {\n        this.walk(data); // 可以对数据一步一步处理\n      }\n    }\n    walk(data){\n        // 对象循环  data: {name:'zack }\n        Object.keys(data).forEach(key => {\n            defineReactice(data,key,data[key])\n        })\n    }\n    observerArray(value){\n        for(let i=0; i<value.length;i++){\n            observer(value[i]);\n        }\n    }\n\n}\n// vue2的性能问题：递归重写get和set   vue3里面的proxy解决了这个性能问题\nfunction defineReactice(data, key, value){\n    observer(value)     // 传入的值继续是对象的话采用递归\n    Object.defineProperty(data,key, {\n        get(){\n            return value\n        },\n        set(newValue){\n            if(newValue === value){return}\n            observer(newValue) // 监控新设置的值是否是对象 也得监听\n            value = newValue\n        }\n    })\n}\n\nexport function observer(data){\n    if(!isObject(data)){\n        return\n    }\n    if(data.__ob__ instanceof Observer){ // 防止对象被重复观测\n        return\n    }\n    //对数据进行defineProperty\n    return new Observer(data)\n}","/**\n * 初始化状态的js\n * @param {type} parameter 参数描述\n * @returns {type} 返回值描述\n */\nimport { observer } from './observer/index.js'\n\nexport function initState(vm){\n    const opts = vm.$options\n    opts.props && initProps(vm)\n    opts.method && initmethod(vm)\n    opts.data && initData(vm)\n    opts.computed && initComputed(vm);\n    opts.watch && initWatch(vm);\n}\nfunction initProps(vm){}\nfunction initmethod(vm){}\nfunction initData(vm) {\n    console.log(vm.$options.data);\n    // 数据响应式原理\n    let data = vm.$options.data\n    // vm._data 代表检测后的数据\n    data = vm._data = typeof data=== 'function' ? data.call(vm) : data;\n    // 用户改变了数据，驱动视图变化 MVVM 数据变化可以驱动视图变化\n    observer(data)\n}\nfunction initComputed(vm) { }\nfunction initWatch(vm) {}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`   // abc-aa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`     // <aaa:dsds>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)    // 标签开头的正则\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)     // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/       // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/   // 匹配标签结束的 >\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/  // {{}}\n\n\nexport function parseHTML(html) {\n    // 树根\n    let root\n    let currentParent\n    let stack = []      // 典型的语法分析 利用栈的结构\n    // vue2.0 只能有一个根节点，必须是html元素, 不支持多个根节点，需要做dom diff\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            attrs,\n            children:[],\n            parent: null,\n            type: 1     // 1.元素 3.文本\n        }\n    }\n    // 开始标签  每次解析开始标签都会执行\n    function start(tagName, attrs){\n        let element = createASTElement(tagName, attrs)\n        // 没有根元素的话，第一个元素就是根元素\n        if(!root){\n            root = element\n        }\n        currentParent = element\n        stack.push(element)\n    }\n    // 文本\n    function chars(txt){\n        let text = txt.replace(/\\s/g, '')\n        if(text){\n            currentParent.children.push({\n                text: text,\n                type: 3\n            })\n        }\n    }\n    // 结束标签\n    function end(tagName){\n        let element = stack.pop()\n        if (tagName === element.tag) {\n          // 此时标识这个p是属于div的儿子\n          currentParent = stack[stack.length - 1];\n          if (currentParent) {\n            element.parent = currentParent;\n            currentParent.children.push(element);\n          }\n        }\n    }\n\n    // 根据html解析成树结构 <div id=\"app\" style=\"color:red\"><span>hello</span></div>\n    while(html){    \n        let textEnd = html.indexOf('<')\n        if(textEnd === 0){\n            const startTagMatch = parseStarTag()\n            if(startTagMatch){\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            const endTagMatch = html.match(endTag)\n            if(endTagMatch){\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1])\n                continue;\n            }\n        }\n        \n        // 如果不是0 说明是文本\n        let text\n        if(textEnd > 0){\n            text = html.substring(0, textEnd)   // 将文本的内容截取\n            chars(text)\n        }\n        if(text){\n            advance(text.length)        // 删除文本内容\n        }\n    }\n    function advance(n){\n        html = html.substring(n)\n    }\n    function parseStarTag(){\n        const start = html.match(startTagOpen) // 匹配开始标签\n        // 匹配到的标签\n        if(start){\n             const match = {\n                 tagName: start[1],\n                 attrs: []\n             }\n             advance(start[0].length)\n             let end, attr\n             while( !(end = html.match(startTagClose)) && (attr = html.match(attribute))){\n                advance(attr[0].length)\n                match.attrs.push({name:attr[1], value: attr[3] || attr[4] || attr[5]})\n             }\n             if(end){   // 去掉开始标签的 > 号\n                advance(end[0].length)\n                return match\n             }\n        }\n    }\n    console.log(root)\n    return root\n}","/**\n * 将ast语法树，再次转换成js的语法\n * @param {type} parameter <div id=\"app\"><span>hello{{msg}}</span></div> 的语法树\n * @returns {type} _c(\"div\", {id: app, {style:{color:'red'}}}, _c(\"span\", undefined, _v('hello'+ _s(msg))))\n *           _c: 创建元素的方法，_v：创建文本的方法 _s： 转字符串方法\n */\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nexport function generate(el) {\n    let children = genChildren(el)\n    let code  = `_c(\"${el.tag}\",${\n        el.attrs.length?genProps(el.attrs):'undefined'\n    }${\n        children? `,${children}`:''\n    })`\n    return code\n}\n\nfunction genChildren(el) {\n    let children = el.children\n    if (children && children.length > 0) {\n        return `${children.map((c) => gen(c)).join(\",\")}`;\n    } else {\n        return false\n    }\n}\n\nfunction gen(node) {\n    if (node.type == 1) {\n        return  generate(node)\n    } else {\n        let text = node.text    // 形如 a{{name}}b{{age}}c 转为 _v(\"a\"+_s(name)+\"b\"+_s(age)+\"c\")\n        let tokens = []\n        let match, index;\n        let lastIndex = defaultTagRE.lastIndex = 0;\n        while (match = defaultTagRE.exec(text)) {\n            index = match.index\n            if (index > lastIndex) {\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`)\n            lastIndex = index + match[0].length\n        }\n        if (lastIndex < text.length) {\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        console.log(tokens)\n       \n        return `_v(${tokens.join('+')})`\n    }\n}\n\nfunction genProps(attrs) {\n    let str = ''\n    for (let i = 0; i < attrs.length; i++){\n        let attr = attrs[i]\n        if (attr.name ==='style') {\n            let obj = {}\n            attr.value.split(';').forEach(item => {\n                let [key, value] = item.split(':')\n                obj[key] = value\n            })\n            attr.value = obj\n\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)}`\n    }\n    return `{${str.slice(0,-1)}}`\n}\n\n\n","import {parseHTML} from './parser'\nimport {generate} from './generate'\n\n\nexport function compileToFunctions(template) {\n    // 实现代码编译  ast语法树：用对象描述js语法  虚拟dom： 用对象来描述dom节点\n    // 1. 解析html字符串，将html字符串转成ast语法树\n    let ast = parseHTML(template);\n    // 2. 将ast语法树生成最终的render函数 ，就是字符串拼接（模板引擎:所有的模板引擎实现，都需要new Function + with)\n    let code = generate(ast);\n    code = `with(this){return ${code}}`;\n    console.log(code);\n    let render = new Function(code); // 将字符串转换为函数\n    console.log(render);\n    return render;\n}   \n\n\n/**\n * desc\n * @param {type} parameter 参数描述\n * @returns {type} 返回值描述\n * \n * // 第一步： 解析html字符串，将html字符串转成ast语法树 parseHTML\n * <div id='app'>\n *    <p>hello</p>\n * </div>\n * let root = {\n *    tag: 'div',\n *    attrs: [{name:'id',value:'app'}],\n *    parent: null,\n *    type:1,\n *    children: [\n *      {   tag: 'p',\n *          attrs: [],\n *          parent: root,\n *          children: [\n *              {\n *                  text: 'hello',\n *                  type; 3   \n *              }\n *          ]\n *      }\n *    ]\n * }\n * \n * // 第二步： 将ast语法树生成最终的render函数\n * render(){\n *   return _c('div',{style:{color:'red'}},_v('hello'+_s(name)),_c('span',undefined,''))\n * }\n */","import {initState} from './state.js'\nimport { compileToFunctions } from './compiler/index'\n\nexport function initMixin(Vue) {\n    // 给vue的原型上添加一个init方法\n    Vue.prototype._init = function(options){\n      // vue的内部 $options 就是用户传递的所有参数\n      const vm = this;\n      vm.$options = options;\n      // 初始化状态\n      initState(vm);\n      // 模板渲染\n      if (vm.$options.el) {\n        vm.$mount(vm.$options.el);\n      }\n    }\n  Vue.prototype.$mount = function (el) {\n      const vm = this;\n      const opts = vm.$options;\n      el = document.querySelector(el)\n\n      // 如果同时会传入template和render 默认会采用render \n      // 如果都没传则使用id=app的模板\n    if (!opts.render) {\n      // 取出模板，对模板进行编译\n        let template = opts.template;\n        if (!template && el) {\n          template = el.outerHTML;\n        }\n\n        const render = compileToFunctions(template);\n        opts.render = render;\n      }\n    }\n}  ","// vue的声明\nimport { initMixin } from './init'\n\nfunction Vue(options) {\n    // 初始化的操作\n    this._init(options)\n}\n// 通过引入的方式，给vue原型上添加方法\ninitMixin(Vue)\n\nexport default Vue"],"names":["isObject","obj","def","data","key","value","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","ob","__ob__","args","result","apply","inserted","slice","observerArray","Observer","isArray","__proto__","walk","keys","defineReactice","i","length","observer","get","set","newValue","initState","vm","opts","$options","props","initProps","initmethod","initData","computed","initComputed","watch","initWatch","console","log","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","stack","createASTElement","tagName","attrs","tag","children","parent","type","start","element","push","chars","txt","text","replace","end","pop","textEnd","indexOf","startTagMatch","parseStarTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","generate","el","genChildren","code","genProps","map","c","gen","join","node","tokens","index","lastIndex","exec","JSON","stringify","trim","str","split","item","compileToFunctions","template","ast","render","Function","initMixin","Vue","_init","options","$mount","document","querySelector","outerHTML"],"mappings":"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"}