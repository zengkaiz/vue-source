{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isObject(obj) {\n    if(typeof obj === 'object' && typeof obj !== null){\n        return true\n    }\n}","let oldArrayMethods = Array.prototype  // 获取原型上的方法\nexport let arrayMethods = Object.create(oldArrayMethods)    // 创建一个新的对象 可以找到原型上的方法，而且不会影响原数组的方法\n\nlet methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'sort',\n    'reverse',\n    'splice'\n]\n\nmethods.forEach(method => {\n    arrayMethods[method] = function(...args){      // 函数劫持 AOP\n        // 当调用数组方法时 会先执行我自己改造的逻辑，然后执行数组默认的逻辑\n        const ob = this.__ob__\n        let result = oldArrayMethods[method].apply(this, args)\n        let inserted\n        // push unshift splice 都可以新增属性  \n\n        switch(method){\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break\n            case 'splice':\n                inserted = args.slice(2)\n                break\n            default:\n                break\n        }\n        inserted && ob.observerArray(inserted)\n        return result\n    }\n})","import {isObject} from '../utils'\nimport {arrayMethods} from './array'\n\nclass Observer {\n    constructor(data){\n         // 1.对象就是使用defineProperty实现数据响应式原理, 如果这个数据不是对象或者是null 那就不用监控了。\n         // 2. 数组索引进行拦截的话 性能差而且直接更新索引的方式并不多 ？ 所以vue对数组是通过重写数组方法 函数劫持来监控数组本身的方法\n         Object.defineProperty(data, '__ob__', {\n            enumerable: false, // 不可枚举\n            configurable: false,\n            value: this\n        })\n        // data.__ob__ = this\n         if(Array.isArray(data)){\n            data.__proto__ = arrayMethods\n            this.observerArray(data)\n         } else {\n            this.walk(data) // 可以对数据一步一步处理\n         }\n        \n    }\n    walk(data){\n        // 对象循环  data: {name:'zack }\n        Object.keys(data).forEach(key => {\n            defineReactice(data,key,data[key])\n        })\n    }\n    observerArray(data){\n        for(let i=0; i<data.length;i++){\n            observer(data[i])\n        }\n    }\n\n}\n// vue2的性能 递归重写get和set   vue3里面的proxy解决了这个性能问题\nfunction defineReactice(data, key, value){\n    observer(value)     // 传入的值继续是对象的话采用递归\n    Object.defineProperty(data,key, {\n        get(){\n            return value\n        },\n        set(newValue){\n            if(newValue === value){return}\n            observer(newValue) // 监控设置新设置的值是否是对象 也得监听\n            value = newValue\n        }\n    })\n}\n\nexport function observer(data){\n    if(!isObject(data)){\n        return\n    }\n    if(data.__ob__ instanceof Observer){ // 防止对象被重复观测\n        return\n    }\n    //对数据进行defineProperty\n    return new Observer(data)\n}","/**\n * 初始化状态的js\n * @param {type} parameter 参数描述\n * @returns {type} 返回值描述\n */\nimport { observer } from './observer/index.js'\n\nexport function initState(vm){\n    const opts = vm.$options\n    opts.props && initProps(vm)\n    opts.method && initmethod(vm)\n    opts.data && initData(vm)\n    // computed  watch 等等\n}\nfunction initProps(vm){}\nfunction initmethod(vm){}\nfunction initData(vm){\n    // 数据响应式原理\n    let data = vm.$options.data\n    // vm._data 代表检测后的数据\n    data = vm._data = typeof data=== 'function' ? data.call(vm) : data;\n\n    observer(data)\n}","import {initState} from './state.js'\nexport function initMixin(Vue){\n    Vue.prototype._init = function(options){\n        // vue的内部 $options 就是用户传递的所有参数\n        const vm = this\n        vm.$options = options\n\n        initState(vm)\n    }\n}  ","import { initMixin } from './init'\n\nfunction Vue(options) {\n    // 先来个初始化的操作\n    this._init(options)\n}\ninitMixin(Vue)\n\nexport default Vue"],"names":["isObject","obj","oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","ob","__ob__","args","result","apply","inserted","slice","observerArray","Observer","data","defineProperty","enumerable","configurable","value","isArray","__proto__","walk","keys","key","defineReactice","i","length","observer","get","set","newValue","initState","vm","opts","$options","props","initProps","initmethod","initData","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}