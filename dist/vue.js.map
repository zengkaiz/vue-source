{"version":3,"file":"vue.js","sources":["../src/utils/index.js","../src/observer/array.js","../src/observer/dep.js","../src/observer/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/generate.js","../src/compiler/index.js","../src/utils/next-tick.js","../src/observer/schedular.js","../src/observer/watcher.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/vdom/create-element.js","../src/render.js","../src/initGlobalAPI/index.js","../src/index.js"],"sourcesContent":["export function isObject(obj) {\n    if(typeof obj === 'object' && typeof obj !== null){\n        return true\n    }\n}\n\n\nexport function def(data, key, value) {\n    Object.defineProperty(data, key, {\n      enumerable: false, // 不可枚举\n      configurable: false,\n      value\n    });\n}\n\nexport function proxy(vm, source, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key];\n    },\n    set(newValue) {\n      vm[source][key] = newValue;\n    },\n  });\n}\n\nconst LIFECYCLE_HOOKS = [\n  \"beforeCreate\",\n  \"created\",\n  \"beforeMount\",\n  \"mounted\",\n  \"beforeUpdate\",\n  \"updated\",\n  \"beforeDestroy\",\n  \"destroyed\",\n];\n\n\nlet strats = {}\nLIFECYCLE_HOOKS.forEach(hook => {\n  strats[hook] = mergeHook\n})\n\n// 合并生命周期钩子\n/**\n * desc 生命周期函数合并方法\n * @param {Function} parentVal 父级生命周期值\n * @param {Function} childVal 子级生命周期值\n * @returns {Array} 生命周期函数合并后的数组\n */\nfunction mergeHook(parentVal, childVal) {\n  // 如果有子级 且 有父级 则父级合并子级\n  if (childVal) {\n    if (parentVal) {\n      return parentVal.concat(childVal);\n    }\n    // 如果没有父级则直接返回数组包裹的子级 这样保证了 最后返回的肯定是一个数组\n    else {\n      return [childVal];\n    }\n  }\n  // 如果没有子级则直接返回父级\n  else {\n    return parentVal;\n  }\n}\n\nexport function mergeOptions(parent, child) {\n  const options = {};\n  // 先合并父里面\n  for (let key in parent) {\n    mergeField(key);\n  }\n  for (let key in child) {\n    // 如果已经合并过就不需要再合并了\n    if (!parent.hasOwnProperty(key)) {\n      mergeField(key);\n    }\n  }\n  // 默认的合并策略 （部分属性需要特殊的合并方式）\n  function mergeField(key) {\n    if (strats[key]) {\n      return (options[key] = strats[key](parent[key], child[key]));\n    }\n    if (typeof parent[key] === \"object\" && typeof child[key] === \"object\") {\n      options[key] = {\n        ...parent[key],\n        ...child[key],\n      };\n    } else if (child[key] == null) {\n      options[key] = parent[key];\n    } else {\n      options[key] = child[key];\n    }\n  }\n  return options;\n}","// data.__proto__ = arrayMethods    arrayMethods.__proto__ = oldArrayMethods 原型链查找\n\nlet oldArrayMethods = Array.prototype  // 获取原型上的方法\nexport let arrayMethods = Object.create(oldArrayMethods)    // 创建一个新的对象 可以找到原型上的方法，而且不会影响原数组的方法\n\nconst methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'sort',\n    'reverse',\n    'splice'\n]\n\nmethods.forEach(method => {\n    arrayMethods[method] = function(...args){      // 函数劫持 AOP\n        // 当调用数组方法时 会先执行我自己改造的逻辑，然后执行数组默认的逻辑\n        const ob = this.__ob__\n        const result = oldArrayMethods[method].apply(this, args);\n        let inserted\n        // push unshift splice 都可以新增属性，新增的属性也要监听\n\n        switch(method){\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break\n            case 'splice':\n                inserted = args.slice(2)\n                break\n            default:\n                break\n        }\n        inserted && ob.observerArray(inserted)\n        // 如果用户调用了数组方法，会通知更新\n        console.log(\"update\")\n        ob.dep.notify()\n        return result\n    }\n})","let id = 0\nclass Dep {\n    constructor() {\n        this.id = id++\n        this.subs = []\n    }\n    addSub(watcher) {\n        this.subs.push(watcher);\n    }\n    // 观察者模式--依赖收集\n    depend() {\n      // 让watcher 记住我当前的dep，如果watcher没存过dep，那么dep肯定也没存过watcher\n      Dep.target.addDep(this);\n      // this.subs.push(Dep.target)\n    }\n    notify() {\n        this.subs.forEach((watcher) => watcher.update());\n    }\n}\n\nexport default Dep\n\n\nlet stack = []\nexport function pushTarget(watcher) {\n    Dep.target = watcher;\n    stack.push(watcher);\n}\n\nexport function popTarget() {\n    stack.pop()\n    Dep.target = stack[stack.length - 1]\n}","import { isObject, def } from \"../utils/index\";\nimport { arrayMethods } from './array'\nimport Dep from './dep'\n\nclass Observer {\n    constructor(data) {\n      this.dep = new Dep()  // 给数组用\n\n      // 给每一个监控过的对象新增一个__ob__属性\n      // value.__ob__ = this 这种写法有风险\n      def(data,\"__ob__\",this)\n\n      // 1.对象就是使用defineProperty实现数据响应式原理, 如果这个数据不是对象或者是null 那就不用监控了。 这个方法不能兼容ie8及以下，所以vue无法兼容\n      // 2. 数组索引进行拦截的话 性能差而且直接更新索引的方式并不多， 所以vue对数组是通过重写数组方法 函数劫持来监控数组本身的方法\n      if (Array.isArray(data)) {\n        data.__proto__ = arrayMethods;\n        this.observerArray(data);\n      } else {\n        this.walk(data); // 可以对数据一步一步处理\n      }\n    }\n    walk(data){\n        // 对象循环  data: {name:'zack }\n        Object.keys(data).forEach(key => {\n            defineReactice(data,key,data[key])\n        })\n    }\n    observerArray(value){\n        for(let i=0; i<value.length;i++){\n            observer(value[i]);\n        }\n    }\n\n}\n// vue2的性能问题：递归重写get和set   vue3里面的proxy解决了这个性能问题\nfunction defineReactice(data, key, value) {\n    let dep = new Dep() // 给对象用\n    // 这里这个value可能是数组也可能是对象，返回的结果是oberver的实例\n    let childOb =  observer(value)     // 传入的值继续是对象的话采用递归\n    Object.defineProperty(data, key, {\n        enumerable: true,\n        get() {\n            // console.log('取值')\n            if(Dep.target){\n                dep.depend()    // 如果当前有watcher，意味着我要将watcher存起来\n                if (childOb) {  // 数组的依赖收集\n                    childOb.dep.depend()\n                    // 如果数组中有嵌套数组\n                    if (Array.isArray(value)) {\n                        dependArray(value)\n                    }\n                }\n            }\n            return value    // 每个属性都有自己的watcher\n        },\n        set(newValue) {\n            // console.log(\"更新数据\");\n            if(newValue === value){return}\n            observer(newValue) // 监控新设置的值是否是对象 也得监听\n            value = newValue\n            dep.notify()    // 通知依赖的watcher来进行一个更新操作\n        }\n    })\n}\n/**\n * 将数组中的每一个都取出来，数据变化后，也去更新视图\n * @param {type} parameter 参数描述\n * @returns {type} 返回值描述\n */\nfunction dependArray(value) {\n    for (let i = 0; i < value.length; i++){\n        let current = value[i]  \n        current.__ob__ && current.__ob__.dep.depend()\n        if (Array.isArray(current)) {\n            dependArray(current);\n        }\n    }\n}\n\nexport function observer(data){\n    if(!isObject(data)){\n        return\n    }\n    if(data.__ob__ instanceof Observer){ // 防止对象被重复观测\n        return\n    }\n    //对数据进行defineProperty\n    return new Observer(data)\n}","/**\n * 初始化状态的js\n * @param {type} parameter 参数描述\n * @returns {type} 返回值描述\n */\nimport { observer } from './observer/index.js'\nimport { proxy } from \"./utils/index\";\n\nexport function initState(vm){\n    const opts = vm.$options\n    opts.props && initProps(vm)\n    opts.method && initmethod(vm)\n    opts.data && initData(vm)\n    opts.computed && initComputed(vm);\n    opts.watch && initWatch(vm);\n}\nfunction initProps(vm){}\nfunction initmethod(vm) { }\n\nfunction initData(vm) {\n    // 数据响应式原理\n    let data = vm.$options.data\n    // vm._data 代表检测后的数据\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n    // 为了让用户更好的使用取值，希望vm.xxx\n    for (let key in data){\n        proxy(vm, '_data', key)\n    }\n    // 用户改变了数据，驱动视图变化 MVVM 数据变化可以驱动视图变化\n    observer(data)\n}\nfunction initComputed(vm) { }\nfunction initWatch(vm) {}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`   // abc-aa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`     // <aaa:dsds>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)    // 标签开头的正则\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)     // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/       // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/   // 匹配标签结束的 >\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/  // {{}}\n\n\nexport function parseHTML(html) {\n    // 树根\n    let root\n    let currentParent\n    let stack = []      // 典型的语法分析 利用栈的结构\n    // vue2.0 只能有一个根节点，必须是html元素, 不支持多个根节点，需要做dom diff\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            attrs,\n            children:[],\n            parent: null,\n            type: 1     // 1.元素 3.文本\n        }\n    }\n    // 开始标签  每次解析开始标签都会执行\n    function start(tagName, attrs){\n        let element = createASTElement(tagName, attrs)\n        // 没有根元素的话，第一个元素就是根元素\n        if(!root){\n            root = element\n        }\n        currentParent = element\n        stack.push(element)\n    }\n    // 文本\n    function chars(txt){\n        let text = txt.replace(/\\s/g, '')\n        if(text){\n            currentParent.children.push({\n                text: text,\n                type: 3\n            })\n        }\n    }\n    // 结束标签\n    function end(tagName){\n        let element = stack.pop()\n        if (tagName === element.tag) {\n          // 此时标识这个p是属于div的儿子\n          currentParent = stack[stack.length - 1];\n          if (currentParent) {\n            element.parent = currentParent;\n            currentParent.children.push(element);\n          }\n        }\n    }\n\n    // 根据html解析成树结构 <div id=\"app\" style=\"color:red\"><span>hello</span></div>\n    while(html){    \n        let textEnd = html.indexOf('<')\n        if(textEnd === 0){\n            const startTagMatch = parseStarTag()\n            if(startTagMatch){\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            const endTagMatch = html.match(endTag)\n            if(endTagMatch){\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1])\n                continue;\n            }\n        }\n        \n        // 如果不是0 说明是文本\n        let text\n        if(textEnd > 0){\n            text = html.substring(0, textEnd)   // 将文本的内容截取\n            chars(text)\n        }\n        if(text){\n            advance(text.length)        // 删除文本内容\n        }\n    }\n    function advance(n){\n        html = html.substring(n)\n    }\n    function parseStarTag(){\n        const start = html.match(startTagOpen) // 匹配开始标签\n        // 匹配到的标签\n        if(start){\n             const match = {\n                 tagName: start[1],\n                 attrs: []\n             }\n             advance(start[0].length)\n             let end, attr\n             while( !(end = html.match(startTagClose)) && (attr = html.match(attribute))){\n                advance(attr[0].length)\n                match.attrs.push({name:attr[1], value: attr[3] || attr[4] || attr[5]})\n             }\n             if(end){   // 去掉开始标签的 > 号\n                advance(end[0].length)\n                return match\n             }\n        }\n    }\n    console.log(root)\n    return root\n}","/**\n * 将ast语法树，再次转换成js的语法\n * @param {type} parameter <div id=\"app\"><span>hello{{msg}}</span></div> 的语法树\n * @returns {type} _c(\"div\", {id: app, {style:{color:'red'}}}, _c(\"span\", undefined, _v('hello'+ _s(msg))))\n *           _c: 创建元素的方法，_v：创建文本的方法 _s： 转字符串方法\n */\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nexport function generate(el) {\n    let children = genChildren(el)\n    let code = `_c(\"${el.tag}\",${\n        el.attrs.length?genProps(el.attrs):'undefined'\n    }${\n        children? `,${children}`:''\n    })`\n    return code\n}\n/**\n * 拼接子元素\n * @param {Object} el 父元素\n * @returns {String} 子元素字符串\n */\nfunction genChildren(el) {\n    let children = el.children\n    if (children && children.length > 0) {\n        return `${children.map((c) => gen(c)).join(\",\")}`;\n    } else {\n        return false\n    }\n}\nfunction gen(node) {\n    if (node.type === 1) {\n        return  generate(node)\n    } else {\n        let text = node.text    // 形如 a{{name}}b{{age}}c 转为 _v(\"a\"+_s(name)+\"b\"+_s(age)+\"c\")\n        let tokens = []\n        let match, index;\n        let lastIndex = defaultTagRE.lastIndex = 0;\n        while (match = defaultTagRE.exec(text)) {\n            index = match.index\n            if (index > lastIndex) {\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`)\n            lastIndex = index + match[0].length\n        }\n        if (lastIndex < text.length) {\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        console.log(tokens)\n        return `_v(${tokens.join('+')})`\n    }\n}\n/**\n * 把属性拼成字符串\n * @param {Array} attrs ast语法树的属性字段\n * @returns {String} 属性字符串\n */\nfunction genProps(attrs) {\n    let str = ''\n    for (let i = 0; i < attrs.length; i++){\n        let attr = attrs[i]\n        if (attr.name === 'style') {\n            let obj = {}\n            attr.value.split(';').forEach(item => {\n                let [key, value] = item.split(':')\n                obj[key] = value\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    console.log(`{${str.slice(0, -1)}}`);\n    return `{${str.slice(0,-1)}}`\n}\n\n\n","import {parseHTML} from './parser'\nimport {generate} from './generate'\n\n\nexport function compileToFunctions(template) {\n    // 实现代码编译  ast语法树：用对象描述js语法  虚拟dom： 用对象来描述dom节点\n    // 1. 解析html字符串，将html字符串转成ast语法树\n    let ast = parseHTML(template);\n    console.log(\"ast语法树:\", ast)\n    // 2. 将ast语法树生成最终的render函数 ，就是字符串拼接（模板引擎:所有的模板引擎实现，都需要new Function + with)\n    let code = generate(ast);\n    code = `with(this){return ${code}}`;\n    let render = new Function(code); // 将字符串转换为函数 new Function + with，返回的是是虚拟dom\n    console.log(\"render函数：\", render);\n    return render;\n}   \n\n\n/**\n * desc\n * @param {type} parameter 参数描述\n * @returns {type} 返回值描述\n * \n * // 第一步： 解析html字符串，将html字符串转成ast语法树 parseHTML\n * <div id='app'>\n *    <p>hello</p>\n * </div>\n * let root = {\n *    tag: 'div',\n *    attrs: [{name:'id',value:'app'}],\n *    parent: null,\n *    type:1,\n *    children: [\n *      {   tag: 'p',\n *          attrs: [],\n *          parent: root,\n *          children: [\n *              {\n *                  text: 'hello',\n *                  type; 3   \n *              }\n *          ]\n *      }\n *    ]\n * }\n * \n * // 第二步： 将ast语法树生成最终的render函数\n * render(){\n *   return _c('div',{style:{color:'red'}},_v('hello'+_s(name)),_c('span',undefined,''))\n * }\n */","let callbacks = []\nlet waiting = false\nfunction flushCallBack() {\n    callbacks.forEach((cb) => cb());\n    waiting = false;\n}\nexport function nextTick(cb) {\n    callbacks.push(cb)\n    if (!waiting) {\n        setTimeout(() => {\n            flushCallBack()\n        }, 0);\n        waiting = true;\n    }\n    \n}","/**\n * 为了避免多次push这种操作多次触发更新\n * @param {Object} watcher 渲染wathcer\n */\nimport { nextTick} from '../utils/next-tick'\nlet queue = [];\nlet has = {};\n\nexport function queueWatcher(watcher) {\n  const id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    queue.push(watcher);\n    // vue里面的Vue.nextTick = promise / mutationObserver / setImmediate / setTimeout  优雅降级处理\n    nextTick(flushSchedularQueue);\n    setTimeout(function () {\n      \n    }, 0);\n  }\n}\n\n\nfunction flushSchedularQueue() {\n  queue.forEach((watcher) => watcher.run());\n  queue = [];\n  has = {};\n}\n ","import { pushTarget, popTarget } from \"./dep\";\nimport { queueWatcher} from './schedular'\nlet id = 0\nclass Watcher {\n    constructor(vm, exprOrFn, callback, options) {\n        this.vm = vm\n        this.callback = callback\n        this.options = options\n        this.id = id++\n        this.depsId = new Set()\n        this.deps = []\n        this.getter = exprOrFn      // 将内部传过来的回调函数 放到getter上\n        this.get()\n    }\n    get() {\n        pushTarget(this)    // 把watcher存起来 Dep.target\n        this.getter()       // 渲染watcher执行\n        popTarget()         // 移除watcher\n    }\n    update() {\n        console.log(this.id)\n        queueWatcher(this)\n        // this.get()\n    }\n    // watcher里不能放重复的dep，dep里面不能放重复的watcher\n    addDep(dep) {\n        let id = dep.id\n        if (!this.depsId.has(id)) {\n            this.depsId.add(id)\n            this.deps.push(dep)\n            dep.addSub(this)\n        } else {\n\n        }\n    }\n    run() {\n        this.get()\n    }\n}\n\nexport default Watcher","export function patch(oldVnode, newVnode) {\n    // 递归创建真实节点 替换掉老的节点\n    // 1. 判断是更新还是要渲染\n    const isRealElement = oldVnode.nodeType\n    if (isRealElement) {\n        const oldElm = oldVnode // div id=\"app\"\n        const parentElm = oldElm.parentNode // body\n        let el = createElm(newVnode);\n        parentElm.insertBefore(el, oldElm.nextSibling)\n        parentElm.removeChild(oldElm)\n        return el\n    } else {\n        // dom diff  同层比较 O(n)  不需要跨级比较\n        // 两棵树 要先比较树根是否一样，再比较儿子是否一样\n\n        // 标签名不一致， 说明两个不一样的节点\n        if (oldVnode.tag !== newVnode.tag) {\n            oldVnode.el.parentNode.replaceChild(createElm(newVnode), oldVnode.el)\n        }\n        // 标签一致，都是文本  tag\n        if (!oldVnode.tag) {\n            if (oldVnode.text !== newVnode.text) {\n                oldVnode.el.textContent = newVnode.text\n            }\n        }\n        // 标签一致且都是标签\n\n        // 需要复用老的节点，替换掉老的属性\n        let el = newVnode.el = oldVnode.el\n        // 更新属性\n        updateProperties(newVnode, oldVnode.data)\n\n        // 对比孩子\n        // 老的有孩子，新的没孩子，直接删除\n        // 老的没孩子，新的有孩子，直接插入\n        let oldChildren = oldVnode.children || []\n        let newChildren = newVnode.children || [];\n\n        if (oldChildren.length > 0 && newChildren.length > 0) {\n            // diff 核心 两个都有孩子 通过比较老孩子和新孩子 去操作el中的孩子\n            updateChildren(el, oldChildren, newChildren)\n        } else if (oldChildren.length > 0) {\n            el.innerHTML = ''\n        } else if (newChildren.length > 0) {\n            for (let i = 0; i < newChildren.length; i++){\n                let child = newChildren[i]\n                el.appendChild(createElm(child))\n            }\n        }\n        return el\n    }\n}\nfunction isSameVnode(oldVnode, newVnode) {\n    return (oldVnode.key === newVnode.key) && (oldVnode.tag === newVnode.tag)\n}\n\nfunction updateChildren(parent, oldChildren, newChildren) {\n    // vue2.0 使用双指针的方式对比\n    // v-for 要有key key可以标识元素是否发生变化 前后key相同则可以服用这个元素\n    let oldStartIndex = 0   // 老的开始索引\n    let oldStartVnode = oldChildren[0]  // 老的开始标签\n    let oldEndIndex = oldChildren.length - 1    // 老的结尾索引\n    let oldEndVnode = oldChildren[oldEndIndex]   // 老的结尾标签\n\n    let newStartIndex = 0;  // 新的开始索引\n    let newStartVnode = newChildren[0]; // 新的开始标签\n    let newEndIndex = newChildren.length - 1;  // 新的结尾索引\n    let newEndVnode = newChildren[newEndIndex]; // 新的结尾标签\n\n    function makeIndexByKey(children) {\n      let map = {};\n      children.forEach((item, index) => {\n        map[item.key] = index;\n      });\n      return map;\n    }\n    let map = makeIndexByKey(oldChildren);\n\n    // 方案一： 先开始从头部进行比较\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n        if (!oldStartVnode) {\n            oldStartVnode = oldChildren[++oldEndIndex]\n        } else if (!oldEndVnode) {\n            oldEndVnode = oldChildren[--oldEndIndex]\n            // 判断两个虚拟节点书否一致，用key和type判断\n        } else if ((isSameVnode(oldStartVnode, newStartVnode))) {\n            // 标签和key一致，但是属性可能不一致\n            patch(oldStartVnode, newStartVnode)\n            oldStartVnode = oldChildren[++oldStartIndex]\n            newStartVnode = newChildren[++newStartIndex]\n            // 方案二：如果头部不一致，开始尾部比较，优化向前插入\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode)\n            oldEndVnode = oldChildren[--oldEndIndex]\n            newEndVnode = newChildren[--newStartIndex]\n            // 方案三 头不一样 尾不一样 头移尾\n        } else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            patch(oldStartVnode, newEndVnode)\n            parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)   // 具备移动性\n            oldStartVnode = oldChildren[++oldStartIndex]\n            newEndVnode = newChildren[--newEndIndex]\n             // 方案四 头不一样 尾不一样 头移尾\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            patch(oldEndVnode, newStartVnode)\n            parent.insertBefore(oldEndVnode.el, oldStartVnode.el)   // 具备移动性\n            oldEndVnode = oldChildren[--oldEndIndex]\n            newStartVnode = newChildren[++newStartIndex]\n        } else {\n            // 最终方案：乱序对比\n            let moveIndex = map[newStartVnode.key]\n            // 新元素的情况\n            if (moveIndex == undefined) {\n                parent.insertBefore(createElm(newStartVnode), oldStartVnode.el)\n            } else {\n                let moveNode = oldChildren[moveIndex]\n                oldChildren[moveIndex] = null   // 占位 删除的话会导致数组塌陷\n                // 找到的话插入到老节点的最前面\n                patch(moveNode, newStartVnode);\n                parent.insertBefore(moveNode.el, oldStartVnode.el); \n            }\n            newStartVnode = newChildren[++newStartIndex]\n        }\n        \n    }\n    // 说明老的已经循环完了，剩下的新的应该追加\n    if (newStartIndex <= newEndIndex) {\n        for (let i = newStartIndex; i <= newEndIndex; i++){\n            console.log(createElm(newChildren[i]));\n            parent.appendChild(createElm(newChildren[i]));\n        }\n    }\n    // 此时新的已经循环完了，剩下的老的是应该删除的。\n    if (oldStartIndex <= oldEndIndex) {\n        for (let i = oldStartIndex; i <= oldEndIndex; i++){\n            let child = oldChildren[i];\n            console.log(child);\n            if (child != null) {\n                parent.removeChild(child.el);\n            }\n        }\n    }\n}\n\n/**\n * 创建节点\n * @param {Object} vnode 节点\n * @returns {type} 真实dom\n */\nexport function createElm(vnode) {\n    let { tag, children, key, data, text } = vnode\n    if (typeof tag === 'string') {\n        vnode.el = document.createElement(tag)\n        updateProperties(vnode)\n        children.forEach(child => {\n            return vnode.el.appendChild(createElm(child));\n        })\n    } else {\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\n/**\n * \b更新属性\n * @param {Object} vnode 节点\n * @param {Object} oldProps 老节点的属性\n */\nfunction updateProperties(vnode, oldProps = {}) {\n    let el = vnode.el;\n    let newProps = vnode.data || {};\n    // 需要比对vnode.data 和 oldProps 的差异\n    \n    let oldStyle = oldProps.style || {}\n    let newStyle = newProps.style || {};\n    // 新老节点的样式对比，新节点的没有的样式，需要删掉\n    for (let key in oldStyle) {\n        if (!newStyle[key]) {\n            el.style[key] = ''\n        }\n    }\n    // 新老节点的属性对比，新节点的没有的属性，需要删掉\n    for (let key in oldProps) {\n        if (!newProps[key]) {\n            el.removeAttribute(key)\n        }\n    }\n    // 其他情况直接用新的覆盖掉老的就行\n    for (let key in newProps){\n        if (key === 'style') {\n            for (let styleName in newProps.style) {\n                el.style[styleName] = newProps.style[styleName]\n            }\n        } else if (key === 'class') {\n            el.className = newProps.class\n        } else {\n            el.setAttribute(key, newProps[key]);\n        }\n    }\n}","import Watcher from './observer/watcher'\nimport { patch} from './vdom/patch'\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm = this\n        vm.$el = patch(vm.$el, vnode);\n    }\n}\n\n\nexport function mountComponent(vm, el) {\n    // render\n    const options = vm.$options\n    // 真实的dom元素$el 替换el\n    vm.$el = el\n    // 挂载之前\n    callHook(vm, 'beforeMount')\n    // 渲染和更新页面方法\n    let updateComponent = () => {\n      // vm._render() 通过解析好的render方法，返回虚拟dom； vm._update() 通过虚拟dom，返回真实dom\n      vm._update(vm._render());\n    }\n    // 渲染watcher 每个组件都有一个渲染watcher\n    new Watcher(vm, updateComponent, () => { }, true); // true 表示是一个渲染watcher\n    // 渲染之后\n    callHook(vm, 'mounted')\n}\n\nexport function callHook(vm, hook) {\n    const handlers = vm.$options[hook]\n    if (handlers) {\n        for (let i = 0; i < handlers.length; i++){\n            handlers[i].call(vm)\n        }\n    }\n}","import {initState} from './state.js'\nimport { compileToFunctions } from './compiler/index'\nimport { mountComponent, callHook } from './lifecycle'\nimport { mergeOptions } from './utils/index'\nimport { nextTick } from \"./utils/next-tick\";\n\nexport function initMixin(Vue) {\n    // 给vue的原型上添加一个init方法\n    Vue.prototype._init = function(options){\n      // vue的内部 $options 就是用户传递的所有参数\n      const vm = this;\n      // 将用户传递的和全局的进行一个合并\n      vm.$options = mergeOptions(vm.constructor.options, options);\n      console.log(vm.$options);\n      // 生命周期:'beforeCreate'\n      callHook(vm, \"beforeCreate\");\n      // 初始化状态\n      initState(vm);\n      // 生命周期:'created'\n      callHook(vm, \"created\");\n      // 模板渲染\n      if (vm.$options.el) {\n        vm.$mount(vm.$options.el);\n      }\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const opts = vm.$options;\n        el = document.querySelector(el)\n        // 如果同时会传入template和render 默认会采用render \n        // 如果都没传则使用id=app的模板\n      if (!opts.render) {\n        // 取出模板，对模板进行编译\n        let template = opts.template;\n        if (!template && el) {\n          template = el.outerHTML;\n        }\n\n        const render = compileToFunctions(template);\n        opts.render = render;\n      }\n      // 渲染当前的组件 挂载这个组件\n      mountComponent(vm, el)\n    }\n    // 用户调用的nextTick\n    Vue.prototype.$nextTick = nextTick\n}  ","export function createElement(tag, data = {}, ...children) {\n    \n    let key = data.key\n    if (key) {\n        delete data.key \n    }\n    return vnode(tag, data, key, children, undefined)\n}\n\nexport function createTextNode(text) {\n    return vnode(undefined, undefined, undefined, undefined, text)\n}\n\nfunction vnode(tag, data, key, children, text) {\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n    }\n}\n\n\n// 1. 将template转换成ast语法树，\n// 2. 生成render方法\n// 3. 生成虚拟dom\n// 4. 生成真实dom","import Vue from \".\";\n\nimport { createElement, createTextNode } from \"./vdom/create-element\";\n\nexport function renderMixin(Vue) {\n    //  _c 创建元素的虚拟节点\n    // _v 创建文本的虚拟节点\n    // _s JSON.stringify\n\n    Vue.prototype._c = function () {\n        return createElement(...arguments)\n    }\n    Vue.prototype._v = function (text) {\n      return createTextNode(text);\n    }\n    Vue.prototype._s = function (val) {\n      return val == null ? '':(typeof val === 'object' ? JSON.stringify(val): val)\n    }\n\n    Vue.prototype._render = function () {\n        const vm = this\n        const { render } = vm.$options\n        let vnode = render.call(vm)\n        console.log(\"虚拟dom:\", vnode);\n        return vnode\n    }\n}","import { mergeOptions } from \"../utils/index\";\n\nexport function initGlobalAPI(Vue) {\n    // 整合了全局相关的内容\n    Vue.options = {}\n\n    Vue.mixin = function (mixin) {\n        this.options = mergeOptions(this.options, mixin)\n    }\n}","import { initMixin } from './init'\nimport { lifecycleMixin } from \"./lifecycle\"\nimport { renderMixin } from \"./render\"\nimport { initGlobalAPI } from \"./initGlobalAPI/index\";\n\nfunction Vue(options) {\n    this._init(options)\n}\n// 通过引入的方式，给vue原型上添加方法\n\ninitMixin(Vue)  // 增添初始化方法\nrenderMixin(Vue)    // 增添渲染方法，调用我们的render方法\nlifecycleMixin(Vue)     // 增添update方法，将虚拟dom渲染成真实dom\n\n// 初始化全局的API\ninitGlobalAPI(Vue)\n\n\n// ------------------------------ diff ---------------------------------\n// diff: 比较两个树的差异（虚拟dom）把前后的dom节点渲染成虚拟dom，通过虚拟节点比对，找到差异，更新真实dom\n\nimport { compileToFunctions } from './compiler/index'\nimport { createElm, patch } from './vdom/patch'\n\nlet vm1 = new Vue({ data: { name: 'zengkaiz' } })\nlet vm2 = new Vue({ data: { name: \"zack\" } })\n\nlet render1 = compileToFunctions(\n    `<ul>\n        <li key=\"A\">A</li>\n        <li key=\"B\">B</li>\n        <li key=\"C\">C</li>\n        <li key=\"D\">D</li>\n    </ul>`\n);\nlet oldVNode = render1.call(vm1)\nlet relElement = createElm(oldVNode)\ndocument.body.appendChild(relElement)\n\nlet render2 = compileToFunctions(\n  `<ul>\n        <li key=\"C\">C</li>\n        <li key=\"D\">D</li>\n        <li key=\"E\">E</li>\n        <li key=\"M\">M</li>\n    </ul>`\n);\nlet newVNode = render2.call(vm2);\n// 没有虚拟dom和diff算法时， 都是直接重新渲染，强制重新更新页面（没有复用老的节点）\nsetTimeout(() => {\n    patch(oldVNode, newVNode); // 虚拟节点之间的比对\n}, 1000)\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Vue"],"names":["isObject","obj","def","data","key","value","Object","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","LIFECYCLE_HOOKS","strats","forEach","hook","mergeHook","parentVal","childVal","concat","mergeOptions","parent","child","options","mergeField","hasOwnProperty","oldArrayMethods","Array","prototype","arrayMethods","create","methods","method","ob","__ob__","args","result","apply","inserted","slice","observerArray","console","log","dep","notify","id","Dep","subs","watcher","push","target","addDep","update","stack","pushTarget","popTarget","pop","length","Observer","isArray","__proto__","walk","keys","defineReactice","i","observer","childOb","depend","dependArray","current","initState","opts","$options","props","initProps","initmethod","initData","computed","initComputed","watch","initWatch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","createASTElement","tagName","attrs","tag","children","type","start","element","chars","txt","text","replace","end","textEnd","indexOf","startTagMatch","parseStarTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","generate","el","genChildren","code","genProps","map","c","gen","join","node","tokens","index","lastIndex","exec","JSON","stringify","trim","str","split","item","compileToFunctions","template","ast","render","Function","callbacks","waiting","flushCallBack","cb","nextTick","setTimeout","queue","has","queueWatcher","flushSchedularQueue","run","Watcher","exprOrFn","callback","depsId","Set","deps","getter","add","addSub","patch","oldVnode","newVnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","replaceChild","textContent","updateProperties","oldChildren","newChildren","updateChildren","innerHTML","appendChild","isSameVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","moveIndex","undefined","moveNode","vnode","document","createElement","createTextNode","oldProps","newProps","oldStyle","style","newStyle","removeAttribute","styleName","className","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","outerHTML","$nextTick","renderMixin","_c","arguments","_v","_s","val","initGlobalAPI","mixin","vm1","vm2","render1","oldVNode","relElement","body","render2","newVNode"],"mappings":"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"}